
delete from [commercial]_[fishframe]_[2011].cl
insert into [commercial]_[fishframe]_[2011].cl

-- drop table if exists [commercial]_[fishframe]_[2011].cl_er_2;
-- create table [commercial]_[fishframe]_[2011].cl_er_2

select
 'CL' as Record_type,
 lc.Landing_country as Landing_country,
 'DEU' as Vessel_flag_country,
 av.Year,
 av.Quarter,
 av.Month,
 av.Area,
 av.Statistical_rectangle,
 '' as Sub_polygon,
 av.Species,
 'HUC' as Landing_category,
 'EU' as Comm_size_cat_scale,
  0*1 as Comm_size_cat,
  '' as FAC_National,
  '' as FAC_EC_lvl5,
 av.metier as FAC_EC_lvl6, 
 av.Harbour, 
 av.Vessel_length_category as Vessel_length_cat,
 -- end of PK
 0*1 as Unallocated_catch_weight,
 0*1 as Area_misreported_Catch_weight,
 round(sum(av.sum_fangkg_fangnr_ort_monat),0) as Official_Landings_weight,
 1 as Landings_multiplier,
 round(sum(av.Official_landings_value),0) as Official_landings_value
 
from 
 [commercial]_[processing].for_cl_all_vessel_f av
 
left join
 [commercial]_[parameter].landOrt_Landing_Country lc
on
 av.Harbour = lc.LandOrt 
-- Harbor mit [commercial]_[parameter].landing_site umkodieren
where
 av.Harbour is not null
-- and av.target_species <>'MUS'
and
 av.Year = @year

group by 'CL', lc.Landing_country, 'DEU', av.Year, av.Quarter, av.Month, av.Area, av.Statistical_rectangle, '', av.Species, 'HUC', 'EU', 0*1, '', '', av.metier, av.Harbour, av.Vessel_length_category, 0*1, 0*1, 1
;

/*
select sum(Official_Landings_weight) from [commercial]_[fishframe]_[2011]..cl  44202789
select sum(FANGKG) from commercial_fishery_final.ANLANDUNG  44202789
select sum(sum_fangkg_fangnr_ort_monat) from  commercial_fishery.for_cl_all_vessel_f 4.4202789E7
*/

drop table if exists [commercial]_[processing].cl_float;

create table [commercial]_[processing].cl_float

select
 'CL' as Record_type,
 lc.Landing_country as Landing_country,
 'DEU' as Vessel_flag_country,
 av.Year,
 av.Quarter,
 av.Month,
 av.Area,
 av.Statistical_rectangle,
 '' as Sub_polygon,
 av.Species,
 'HUC' as Landing_category,
 'EU' as Comm_size_cat_scale,
  0*1 as Comm_size_cat,
  '' as FAC_National,
  '' as FAC_EC_lvl5,
 av.metier as FAC_EC_lvl6, 
 av.Harbour, 
 av.Vessel_length_category as Vessel_length_cat,
 -- end of PK
 0*1 as Unallocated_catch_weight,
 0*1 as Area_misreported_Catch_weight,
 sum(av.sum_fangkg_fangnr_ort_monat) as Official_Landings_weight,
 1 as Landings_multiplier,
 sum(av.Official_landings_value) as Official_landings_value
 
from
 [commercial]_[processing].for_cl_all_vessel_f av
 
left join
 [commercial]_[parameter].landOrt_Landing_Country lc
on
 av.Harbour = lc.LandOrt 

where
 av.Harbour is not null
and
 av.target_species <>'MUS'
and
 av.Year = @year
 
group by 'CL', lc.Landing_country, 'DEU', av.Year, av.Quarter, av.Month, av.Area, av.Statistical_rectangle, '', av.Species, 'HUC', 'EU', 0*1, '', '', av.metier, av.Harbour, av.Vessel_length_category, 0*1, 0*1, 1
;


drop table if exists [commercial]_[processing].achtung_fishframe_diff;

create table [commercial]_[processing].achtung_fishframe_diff (

 quelle varchar(30),
 summe_fangkg double
 )
 ;
 
insert into
 [commercial]_[processing].achtung_fishframe_diff

select
 'anlandung' as quelle,
 sum(FANGKG) as summe_fangkg

from
 [commercial]_[fishery]_[final]_[osf]_[2011].ANLANDUNG

group by 'anlandung'
 ;
 
 
insert into
 [commercial]_[processing].achtung_fishframe_diff
select 
 'cl_landing_statisics_float' as quelle,
 sum(Official_Landings_weight) as summe_fangkg

from
 [commercial]_[processing].cl_float 
 
group by 'cl_landing_statisics_float'
;

insert into
 [commercial]_[processing].achtung_fishframe_diff
 
select 
 'cl_landing_statisics_round_l' as quelle,
 sum(Official_Landings_weight) as summe_fangkg
 
from
 [commercial]_[fishframe]_[2011].cl
 
group by 'cl_landing_statisics_round_l'
;

